import React from 'react';
import jsPDF from 'jspdf';

const PDFGenerator = ({ items, people, totalCost, perPerson }) => {
  // PDF Generation Function
  const generatePDFReport = () => {
    const doc = new jsPDF();
    const currentDate = new Date().toLocaleDateString();
    const currentTime = new Date().toLocaleTimeString();

    // Set up the document with proper encoding
    doc.setFontSize(20);
    doc.setTextColor(128, 0, 128); // Purple color
    doc.text('PARTY BUDGET REPORT', 20, 30);

    // Add date and time
    doc.setFontSize(12);
    doc.setTextColor(100, 100, 100);
    doc.text(`Generated on: ${currentDate} at ${currentTime}`, 20, 45);

    // Add separator line
    doc.setDrawColor(200, 200, 200);
    doc.line(20, 50, 190, 50);

    // Summary section
    doc.setFontSize(16);
    doc.setTextColor(0, 0, 0);
    doc.text('BUDGET SUMMARY', 20, 65);

    doc.setFontSize(12);
    doc.text(`Number of People: ${people}`, 20, 80);
    doc.text(`Total Cost: Rs.${totalCost.toLocaleString()}`, 20, 90);
    doc.text(`Cost per Person: Rs.${parseFloat(perPerson).toLocaleString()}`, 20, 100);

    // Items section
    doc.setFontSize(16);
    doc.text('PARTY ITEMS BREAKDOWN', 20, 120);

    // Table headers
    doc.setFontSize(10);
    doc.setTextColor(128, 0, 128);
    doc.text('Item Name', 20, 135);
    doc.text('Unit Price (Rs.)', 80, 135);
    doc.text('Quantity', 130, 135);
    doc.text('Total (Rs.)', 160, 135);

    // Add line under headers
    doc.setDrawColor(128, 0, 128);
    doc.line(20, 138, 190, 138);

    // Add items
    doc.setTextColor(0, 0, 0);
    let yPosition = 150;
    
    items.forEach((item, index) => {
      if (yPosition > 270) { // Check if we need a new page
        doc.addPage();
        // Add header on new page
        doc.setFontSize(16);
        doc.setTextColor(128, 0, 128);
        doc.text('PARTY ITEMS BREAKDOWN (Continued)', 20, 30);
        
        // Table headers on new page
        doc.setFontSize(10);
        doc.text('Item Name', 20, 45);
        doc.text('Unit Price (Rs.)', 80, 45);
        doc.text('Quantity', 130, 45);
        doc.text('Total (Rs.)', 160, 45);
        doc.line(20, 48, 190, 48);
        
        yPosition = 60;
        doc.setTextColor(0, 0, 0);
      }
      
      const itemTotal = item.unitPrice * item.quantity;
      const itemName = item.name || `Item ${index + 1}`;
      
      // Truncate long item names if necessary
      const truncatedName = itemName.length > 25 ? itemName.substring(0, 22) + '...' : itemName;
      
      doc.text(truncatedName, 20, yPosition);
      doc.text(item.unitPrice.toLocaleString(), 80, yPosition);
      doc.text(item.quantity.toString(), 130, yPosition);
      doc.text(itemTotal.toLocaleString(), 160, yPosition);
      yPosition += 12;
    });

    // Add total line
    yPosition += 10;
    doc.setDrawColor(0, 0, 0);
    doc.line(20, yPosition, 190, yPosition);
    
    // Add grand total
    yPosition += 15;
    doc.setFontSize(14);
    doc.setTextColor(0, 128, 0); // Green color
    doc.text(`GRAND TOTAL: Rs.${totalCost.toLocaleString()}`, 20, yPosition);
    
    // Add additional summary information
    yPosition += 20;
    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100);
    doc.text('ADDITIONAL INFORMATION:', 20, yPosition);
    yPosition += 12;
    doc.text(`- Total number of items: ${items.length}`, 25, yPosition);
    yPosition += 10;
    doc.text(`- Average cost per item: Rs.${items.length > 0 ? (totalCost / items.length).toFixed(2) : '0'}`, 25, yPosition);
    yPosition += 10;
    doc.text(`- Budget per person: Rs.${parseFloat(perPerson).toLocaleString()}`, 25, yPosition);

    // Add footer to all pages
    const pageCount = doc.internal.getNumberOfPages();
    for (let i = 1; i <= pageCount; i++) {
      doc.setPage(i);
      doc.setFontSize(8);
      doc.setTextColor(150, 150, 150);
      doc.text(`Generated by Party Budget Planner - Page ${i} of ${pageCount}`, 20, 285);
      doc.text('For more party planning tools, visit our website', 20, 290);
    }

    // Save the PDF with a clean filename
    const cleanDate = currentDate.replace(/\//g, '-').replace(/\\/g, '-');
    doc.save(`Party-Budget-Report-${cleanDate}.pdf`);
  };

  return (
    <div className="mt-6 flex justify-center">
      <button
        onClick={generatePDFReport}
        className="bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white px-8 py-4 rounded-2xl font-semibold text-base sm:text-lg shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200 flex items-center space-x-3"
      >
        <span className="text-2xl">ðŸ“„</span>
        <span>Generate PDF Report</span>
        <div className="w-6 h-6 border-2 border-white/30 rounded-full flex items-center justify-center">
          <span className="text-sm">â†“</span>
        </div>
      </button>
    </div>
  );
};

export default PDFGenerator;